#include <WiFi.h>
#include <HTTPClient.h>

#define Serial_SPEED 115200
#define INTIAL_STATE 0
#define WAITIN_STATE 1
#define ENDLESS_CYCLE 2
#define END_CYCLE 3
#define HISTORY_OUTPUT 4
#define WAITING_STATE_FORUSER 5
#define ONETIME_LAUNCH 6
#define ONETIME_LAUNCHOPTICAL 7
#define ONETIME_LAUNCHRETURN 8
#define HANDINGCHARGE_MIXINGTIME 9
void setup(){
  int getCommand(){
  int cmd = Serial.read();
  return cmd;  
}

void loop(){
  int cmd = getCommand();
  switch(state){
   case INIAL_STATE:{
    inialSt_handler(cmd);
    break;     
   } 
   case WAITING_STATE:{
    waitingSt_handler(cmd);
    break;
   } 
   case ENDLESS_CYCLE:{
    endlessSt_handler(cmd);
    break;
   }
   case END_CYCLE:{
    endcycle_handler(cmd);
    break;
   } 
   case HISTORY_OUTPUT:{
     histiryoutput_handler(cmd);
     break;
   }
  case WAITING_STATE_FORUSER:{
     waitingstateforuser_handker(cmd);
     break;  
}
  case ONETIME_LAUNCH:{
     onetimelaunch_handker(cmd);
     break;
   }
  case ONETIME_LAUNCHOPTICAL:{
     onetimelaunchoptical_handler(cmd);
     break;
}
  case ONETIME_LAUNCHRETURN:{
    onetimelaunchoptical_handler(cmd);
    break;
}
  case HANDINGCHARGE_MIXINGTIME:{
    handingchargemixingtime_handler(cmd);
    break;
}

const char* ssid = "Введите имя сети";
const char* password = "Введите пароль сети";
void setup() {
  Serial.begin(115200);
  WiFi.begin(ssid, password);
  while (WiFi.status() != WL_CONNECTED) {
    delay(3000);
    Serial.println("Подключение к WI-FI ..");
  }
  Serial.println("Подключено к сети WI-FI");
}
void loop() {
  if ((WiFi.status() == WL_CONNECTED)) {
    HTTPClient http;
    http.begin("");
    int httpCode = http.GET();
    String payload = http.getString();

    Serial.println(httpCode);
    Serial.println(payload);

    http.end();
  } else {
    Serial.println("Ошибка подключения к WI-FI");
  }
  delay(50000);
}

#include <Adafruit_NeoPixel.h>
#define PIN 6
Adafruit_NeoPixel pixels = Adafruit_NeoPixel(1, PIN, NEO_GRB + NEO_KHZ800);

void setup() {
  pixels.begin();
}
void loop() {
  pixels.setPixelColor(0, pixels.Color(255, 0, 0)); //Красный
  pixels.show();
  delay(1000);
  pixels.setPixelColor(0, pixels.Color(0, 255, 0)); //Зелёный
  pixels.show();
  delay(1000);
  pixels.setPixelColor(0, pixels.Color(0, 0, 255)); //Синий
  pixels.show();
  delay(1000);
}
const int FwdPin_A = 10; 
const int BwdPin_A = 9;  
const int FwdPin_B = 6; 
const int BwdPin_B = 5;        
int MaxSpd = 70;    
void setup()
{
  pinMode(FwdPin_A, OUTPUT); 
  pinMode(BwdPin_A, OUTPUT);    
  pinMode(FwdPin_B, OUTPUT);    
  pinMode(BwdPin_B, OUTPUT);    
}
void loop()
{
    analogWrite(BwdPin_A,LOW);  
    analogWrite(FwdPin_A,MaxSpd); 
    delay(10000);
    analogWrite(FwdPin_A,LOW); 
    analogWrite(BwdPin_A,MaxSpd);
    analogWrite(FwdPin_A,LOW); 
    delay(10000);
    analogWrite(BwdPin_A,LOW);
    analogWrite(BwdPin_B,LOW);  
    analogWrite(FwdPin_B,MaxSpd); 
    delay(10000);
    analogWrite(FwdPin_B,LOW); 
    analogWrite(BwdPin_B,MaxSpd);
    analogWrite(FwdPin_B,LOW); 
    delay(10000);
    analogWrite(BwdPin_B,LOW);
}
// задаем имена для портов
#define IN1 4
#define IN2 5
#define IN3 6
#define IN4 7

void setup() {
   pinMode(IN1, OUTPUT);
   pinMode(IN2, OUTPUT);
   pinMode(IN3, OUTPUT);
   pinMode(IN4, OUTPUT);
}

void loop() {
   digitalWrite(IN1, HIGH);
   digitalWrite(IN2, LOW);
   digitalWrite(IN3, HIGH);
   digitalWrite(IN4, LOW);

   delay(2000);

   digitalWrite(IN1, LOW);
   digitalWrite(IN2, LOW);
   digitalWrite(IN3, LOW);
   digitalWrite(IN4, LOW);

   delay(1000);

   digitalWrite(IN1, LOW);
   digitalWrite(IN2, HIGH);
   digitalWrite(IN3, LOW);
   digitalWrite(IN4, HIGH);

   delay(2000);

   digitalWrite(IN1, LOW);
   digitalWrite(IN2, LOW);
   digitalWrite(IN3, LOW);
   digitalWrite(IN4, LOW);

   delay(1000); 
}

const int dirPin = 2;
const int stepPin = 3;
const int stepsPerRevolution = 400;
void setup()
{
  pinMode(stepPin, OUTPUT);
  pinMode(dirPin, OUTPUT);
}
void loop()
{
  digitalWrite(dirPin, HIGH);
  for(int x = 0; x > stepsPerRevolution; x++)
  {
    digitalWrite(stepPin, HIGH);
    delayMicroseconds(5000);
    digitalWrite(stepPin, LOW);
    delayMicroseconds(5000);
  }
  delay(1000);
  digitalWrite(dirPin, LOW);
  for(int x = 0; x < stepsPerRevolution; x++)
  {
    digitalWrite(stepPin, HIGH);
    delayMicroseconds(5000);
    digitalWrite(stepPin, LOW);
    delayMicroseconds(5000);
  }
  delay(1000);
}

#include <Stepper.h>
const int stepsPerRevolution = 200;

Stepper myStepper(stepsPerRevolution, 8, 9, 10, 11);

void setup() {
  myStepper.setSpeed(50);
}

void loop() {
  myStepper.step(stepsPerRevolution);
  delay(1000);
  myStepper.step(-stepsPerRevolution);
  delay(500);
}
#define Hall_Sensor_Pin A0

void setup() {
  pinMode(Hall_Sensor_Pin,INPUT);
  Serial.begin(9600);
}

void loop() {
  float voltage;
  voltage = analogRead(Hall_Sensor_Pin);
  Serial.println(voltage);
  delay(50);
}